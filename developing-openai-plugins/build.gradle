buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")
    }
}

repositories {
    mavenCentral()
}

apply(plugin: "kotlin")

test {
    useJUnitPlatform()
}

dependencies {
    api("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    api(platform("org.http4k:http4k-connect-bom:$http4k_connect_version"))
    api("org.http4k:http4k-serverless-lambda")
    api("org.http4k:http4k-connect-openai-plugin")

    testApi(platform("org.junit:junit-bom:$junit_version"))
    testApi("org.http4k:http4k-connect-openai-fake")
    testApi("org.http4k:http4k-testing-hamkrest")
    testApi("org.junit.jupiter:junit-jupiter-api")
    testApi("org.junit.jupiter:junit-jupiter-engine")
}

compileKotlin.kotlinOptions.jvmTarget = "11"
compileTestKotlin.kotlinOptions.jvmTarget = "11"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

tasks.register("buildLambdaZip", Zip) {
    from compileKotlin
    from processResources
    into("lib") {
        from configurations.compileClasspath
    }
}
